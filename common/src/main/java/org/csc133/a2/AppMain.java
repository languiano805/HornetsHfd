package org.csc133.a2;



import com.codename1.charts.util.ColorUtil;
import com.codename1.system.Lifecycle;
import com.codename1.ui.*;

import com.codename1.ui.util.UITimer;
import org.csc133.a2.gameobjects.*;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class AppMain extends Lifecycle {
    @Override
    public void runApp() {
        new Game();
    }

}
class Game extends Form implements Runnable{
    private GameWorld gw;
    public Game()
    {
        gw = new GameWorld();

        UITimer timer = new UITimer(this);
        this.getAllStyles().setBgColor(ColorUtil.BLACK);
        this.show();
    }


    @Override
    public void run()
    {
        gw.tick();
        repaint();
    }

    public void paint(Graphics g)
    {
        super.paint(g);
        gw.draw(g);
    }

}

class GameWorld
{
    final static int DISP_W = Display.getInstance().getDisplayWidth();
    final static int DISP_H = Display.getInstance().getDisplayHeight();

    private Helipad helipad;
    private River river;
    private Helicopter helicopter;
    private Fire fire;
    private Fire fire2;
    private Fire fire3;



    public GameWorld()
    {
        init();
    }

    void init()
    {
        helipad = new Helipad();
        river = new River();
        helicopter = new Helicopter();
        fire = new Fire(300,30,50);
        fire2 = new Fire(1500,25,50);
        fire3 = new Fire(DISP_W/2,DISP_H/2+50,50);
    }

    void draw(Graphics g)
    {
        helicopter.drawHelicopter(g);
        helipad.drawHelipad(g);
        river.drawRiver(g);
        fire.drawFire(g);
        fire2.drawFire(g);
        fire3.drawFire(g);
    }

    public void tick()
    {

    }
}
