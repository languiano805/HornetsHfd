package org.csc133.a2;



import com.codename1.charts.util.ColorUtil;
import com.codename1.components.ButtonList;
import com.codename1.system.Lifecycle;
import com.codename1.ui.*;

import com.codename1.ui.util.UITimer;
import org.csc133.a2.gameobjects.*;


/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class AppMain extends Lifecycle {
    @Override
    public void runApp() {
        new Game();
    }

}
class Game extends Form implements Runnable{
    private GameWorld gw;
    public Game()
    {
        gw = new GameWorld();

        addKeyListener('Q', (evt) -> gw.quit());
        //other key listeners
        addKeyListener(-91,(evt) -> gw.arrowUp());
        addKeyListener(-93,(evt) -> gw.arrowLeft());
        addKeyListener(-94,(evt) -> gw.arrowRight());
        addKeyListener(-92,(evt) -> gw.arrowDown());
//        addKeyListener('d',(evt) -> gw.drinkFromWater());
//        addKeyListener('f',(evt) -> gw.fightFire());

        UITimer timer = new UITimer(this);
        timer.schedule(100, true, this);
        this.getAllStyles().setBgColor(ColorUtil.BLACK);
        this.show();


    }


    @Override
    public void run()
    {
        gw.tick();
        repaint();
    }

    public void paint(Graphics g)
    {
        super.paint(g);
        gw.draw(g);
    }

}

class GameWorld
{
    final static int DISP_W = Display.getInstance().getDisplayWidth();
    final static int DISP_H = Display.getInstance().getDisplayHeight();

    private Helipad helipad;
    private River river;
    private Helicopter helicopter;
    private Fire fire;
    private Fire fire2;
    private Fire fire3;
    private Building building;



    public GameWorld()
    {
        init();
    }


    void init()
    {
        //MUST GET RID OF MAGIC NUMBERS
        helipad = new Helipad();
        river = new River();
        building = new Building(200,DISP_H/2);

        fire = new Fire(300,30,50);
        fire2 = new Fire(1500,25,50);
        fire3 = new Fire(DISP_W/2,DISP_H/2+50,50);
        helicopter = new Helicopter(DISP_W,DISP_H);
    }

    void draw(Graphics g)
    {
        helipad.drawHelipad(g);
        river.drawRiver(g);
        fire.drawFire(g);
        fire2.drawFire(g);
        fire3.drawFire(g);
        helicopter.drawHelicopter(g);
        building.drawBuilding(g);
    }

    public void tick()
    {
        helicopter.reduceFuel();
        helicopter.goForward();
    }

    public void arrowUp()
    {
        helicopter.increaseSpeed();
    }

    public void arrowLeft()
    {
        helicopter.steerLeft();
    }

    public void arrowRight()
    {
        helicopter.steerRight();
    }

    public void arrowDown()
    {
        helicopter.decreaseSpeed();
    }

    public void quit()
    {
        Display.getInstance().exitApplication();
    }
}
